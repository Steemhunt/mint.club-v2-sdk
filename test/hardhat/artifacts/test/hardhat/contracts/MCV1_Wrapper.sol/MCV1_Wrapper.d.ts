// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface MCV1_Wrapper$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "MCV1_Wrapper",
  "sourceName": "test/hardhat/contracts/MCV1_Wrapper.sol",
  "abi": [
    {
      "inputs": [],
      "name": "MCV1_Wrapper__InvalidPaginationParameters",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MCV1_Wrapper__TokenNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BOND",
      "outputs": [
        {
          "internalType": "contract IMintClubBond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getDetail",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "buyRoyalty",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "sellRoyalty",
              "type": "uint16"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "currentSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceForNextMint",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MCV1_Wrapper.BondInfo",
              "name": "info",
              "type": "tuple"
            }
          ],
          "internalType": "struct MCV1_Wrapper.BondDetail",
          "name": "detail",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "getList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "currentSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceForNextMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MCV1_Wrapper.BondInfo[]",
          "name": "info",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokensToBurn",
          "type": "uint256"
        }
      ],
      "name": "getRefundForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "royalty",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokensToMint",
          "type": "uint256"
        }
      ],
      "name": "getReserveForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "royalty",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061125e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a746ee2e1161005b578063a746ee2e146100fd578063a9816b081461011d578063c1c1d2181461013d578063c9cb204b1461015857600080fd5b80634f64b2be1461008257806376a9864b146100bf5780639f181b5e146100e7575b600080fd5b610095610090366004610c6f565b61016b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d26100cd366004610cad565b610201565b604080519283526020830191909152016100b6565b6100ef6103bd565b6040519081526020016100b6565b61011061010b366004610cd9565b610447565b6040516100b69190610dee565b61013061012b366004610e2d565b610478565b6040516100b69190610e4f565b610095738bbac0c7583cc146244a18863e708bffbbf1997581565b6100d2610166366004610cad565b6106d9565b6040517f4f64b2be00000000000000000000000000000000000000000000000000000000815260048101829052600090738bbac0c7583cc146244a18863e708bffbbf1997590634f64b2be90602401602060405180830381865afa1580156101d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fb9190610ecf565b92915050565b6040517f9cc7becf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090819084908290738bbac0c7583cc146244a18863e708bffbbf1997590639cc7becf90602401602060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190610eec565b116102e3576040517f9141058800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610eec565b905060006103628683610f34565b9050671bc16d674ec80000610378600284611067565b610383600284611067565b61038d9190611076565b6103979190611089565b94506103e86103a78660036110c4565b6103b19190611089565b93505050509250929050565b6000738bbac0c7583cc146244a18863e708bffbbf1997573ffffffffffffffffffffffffffffffffffffffff16639f181b5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104429190610eec565b905090565b61044f610bf3565b60408051606081018252601e8152608260208201529081016104708461086f565b905292915050565b6060818310158061049357506103e86104918484611076565b115b156104ca576040517f0fcce4fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000738bbac0c7583cc146244a18863e708bffbbf1997573ffffffffffffffffffffffffffffffffffffffff16639f181b5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610eec565b90508083111561055d578092505b8383038067ffffffffffffffff811115610579576105796110db565b60405190808252806020026020018201604052801561060057816020015b6105ed6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816105975790505b5092506000855b858110156106cf576040517f4f64b2be000000000000000000000000000000000000000000000000000000008152600481018290526106a590738bbac0c7583cc146244a18863e708bffbbf1997590634f64b2be90602401602060405180830381865afa15801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a09190610ecf565b61086f565b85516001840193879181106106bc576106bc61110a565b6020908102919091010152600101610607565b5050505092915050565b6040517f9cc7becf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090819084908290738bbac0c7583cc146244a18863e708bffbbf1997590639cc7becf90602401602060405180830381865afa158015610760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107849190610eec565b116107bb576040517f9141058800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f37430a5100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101859052738bbac0c7583cc146244a18863e708bffbbf19975906337430a51906044016040805180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611139565b90969095509350505050565b6108c56040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b600082905060008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190610eec565b90506040518060e001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109f5919081019061115d565b81526020018373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a45573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a8b919081019061115d565b815260208101839052604080517f9cc7becf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88166004820152910190738bbac0c7583cc146244a18863e708bffbbf1997590639cc7becf90602401602060405180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190610eec565b815260208101839052604080517fdc8de37900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88166004820152910190738bbac0c7583cc146244a18863e708bffbbf199759063dc8de37990602401602060405180830381865afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190610eec565b9052949350505050565b6040518060600160405280600061ffff168152602001600061ffff168152602001610c6a6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b905290565b600060208284031215610c8157600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610caa57600080fd5b50565b60008060408385031215610cc057600080fd5b8235610ccb81610c88565b946020939093013593505050565b600060208284031215610ceb57600080fd5b8135610cf681610c88565b9392505050565b60005b83811015610d18578181015183820152602001610d00565b50506000910152565b60008151808452610d39816020860160208601610cfd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff81511682526000602082015160e06020850152610da060e0850182610d21565b905060408301518482036040860152610db98282610d21565b915050606083015160608501526080830151608085015260a083015160a085015260c083015160c08501528091505092915050565b60208152600061ffff808451166020840152806020850151166040840152506040830151606080840152610e256080840182610d6b565b949350505050565b60008060408385031215610e4057600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ec2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610eb0858351610d6b565b94509285019290850190600101610e76565b5092979650505050505050565b600060208284031215610ee157600080fd5b8151610cf681610c88565b600060208284031215610efe57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156101fb576101fb610f05565b600181815b80851115610fa057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f8657610f86610f05565b80851615610f9357918102915b93841c9390800290610f4c565b509250929050565b600082610fb7575060016101fb565b81610fc4575060006101fb565b8160018114610fda5760028114610fe457611000565b60019150506101fb565b60ff841115610ff557610ff5610f05565b50506001821b6101fb565b5060208310610133831016604e8410600b8410161715611023575081810a6101fb565b61102d8383610f47565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561105f5761105f610f05565b029392505050565b6000610cf660ff841683610fa8565b818103818111156101fb576101fb610f05565b6000826110bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820281158282048414176101fb576101fb610f05565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000806040838503121561114c57600080fd5b505080516020909101519092909150565b60006020828403121561116f57600080fd5b815167ffffffffffffffff8082111561118757600080fd5b818401915084601f83011261119b57600080fd5b8151818111156111ad576111ad6110db565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156111f3576111f36110db565b8160405282815287602084870101111561120c57600080fd5b61121d836020830160208801610cfd565b97965050505050505056fea2646970667358221220017d145a94bdd0f11c3d28e9b8d19bc569e8509af43bff31bbd6a5df5b2e5f5664736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a746ee2e1161005b578063a746ee2e146100fd578063a9816b081461011d578063c1c1d2181461013d578063c9cb204b1461015857600080fd5b80634f64b2be1461008257806376a9864b146100bf5780639f181b5e146100e7575b600080fd5b610095610090366004610c6f565b61016b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d26100cd366004610cad565b610201565b604080519283526020830191909152016100b6565b6100ef6103bd565b6040519081526020016100b6565b61011061010b366004610cd9565b610447565b6040516100b69190610dee565b61013061012b366004610e2d565b610478565b6040516100b69190610e4f565b610095738bbac0c7583cc146244a18863e708bffbbf1997581565b6100d2610166366004610cad565b6106d9565b6040517f4f64b2be00000000000000000000000000000000000000000000000000000000815260048101829052600090738bbac0c7583cc146244a18863e708bffbbf1997590634f64b2be90602401602060405180830381865afa1580156101d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fb9190610ecf565b92915050565b6040517f9cc7becf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090819084908290738bbac0c7583cc146244a18863e708bffbbf1997590639cc7becf90602401602060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190610eec565b116102e3576040517f9141058800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610eec565b905060006103628683610f34565b9050671bc16d674ec80000610378600284611067565b610383600284611067565b61038d9190611076565b6103979190611089565b94506103e86103a78660036110c4565b6103b19190611089565b93505050509250929050565b6000738bbac0c7583cc146244a18863e708bffbbf1997573ffffffffffffffffffffffffffffffffffffffff16639f181b5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104429190610eec565b905090565b61044f610bf3565b60408051606081018252601e8152608260208201529081016104708461086f565b905292915050565b6060818310158061049357506103e86104918484611076565b115b156104ca576040517f0fcce4fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000738bbac0c7583cc146244a18863e708bffbbf1997573ffffffffffffffffffffffffffffffffffffffff16639f181b5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610eec565b90508083111561055d578092505b8383038067ffffffffffffffff811115610579576105796110db565b60405190808252806020026020018201604052801561060057816020015b6105ed6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816105975790505b5092506000855b858110156106cf576040517f4f64b2be000000000000000000000000000000000000000000000000000000008152600481018290526106a590738bbac0c7583cc146244a18863e708bffbbf1997590634f64b2be90602401602060405180830381865afa15801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a09190610ecf565b61086f565b85516001840193879181106106bc576106bc61110a565b6020908102919091010152600101610607565b5050505092915050565b6040517f9cc7becf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090819084908290738bbac0c7583cc146244a18863e708bffbbf1997590639cc7becf90602401602060405180830381865afa158015610760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107849190610eec565b116107bb576040517f9141058800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f37430a5100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101859052738bbac0c7583cc146244a18863e708bffbbf19975906337430a51906044016040805180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611139565b90969095509350505050565b6108c56040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b600082905060008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190610eec565b90506040518060e001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109f5919081019061115d565b81526020018373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a45573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a8b919081019061115d565b815260208101839052604080517f9cc7becf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88166004820152910190738bbac0c7583cc146244a18863e708bffbbf1997590639cc7becf90602401602060405180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190610eec565b815260208101839052604080517fdc8de37900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88166004820152910190738bbac0c7583cc146244a18863e708bffbbf199759063dc8de37990602401602060405180830381865afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190610eec565b9052949350505050565b6040518060600160405280600061ffff168152602001600061ffff168152602001610c6a6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b905290565b600060208284031215610c8157600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610caa57600080fd5b50565b60008060408385031215610cc057600080fd5b8235610ccb81610c88565b946020939093013593505050565b600060208284031215610ceb57600080fd5b8135610cf681610c88565b9392505050565b60005b83811015610d18578181015183820152602001610d00565b50506000910152565b60008151808452610d39816020860160208601610cfd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff81511682526000602082015160e06020850152610da060e0850182610d21565b905060408301518482036040860152610db98282610d21565b915050606083015160608501526080830151608085015260a083015160a085015260c083015160c08501528091505092915050565b60208152600061ffff808451166020840152806020850151166040840152506040830151606080840152610e256080840182610d6b565b949350505050565b60008060408385031215610e4057600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ec2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610eb0858351610d6b565b94509285019290850190600101610e76565b5092979650505050505050565b600060208284031215610ee157600080fd5b8151610cf681610c88565b600060208284031215610efe57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156101fb576101fb610f05565b600181815b80851115610fa057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f8657610f86610f05565b80851615610f9357918102915b93841c9390800290610f4c565b509250929050565b600082610fb7575060016101fb565b81610fc4575060006101fb565b8160018114610fda5760028114610fe457611000565b60019150506101fb565b60ff841115610ff557610ff5610f05565b50506001821b6101fb565b5060208310610133831016604e8410600b8410161715611023575081810a6101fb565b61102d8383610f47565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561105f5761105f610f05565b029392505050565b6000610cf660ff841683610fa8565b818103818111156101fb576101fb610f05565b6000826110bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820281158282048414176101fb576101fb610f05565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000806040838503121561114c57600080fd5b505080516020909101519092909150565b60006020828403121561116f57600080fd5b815167ffffffffffffffff8082111561118757600080fd5b818401915084601f83011261119b57600080fd5b8151818111156111ad576111ad6110db565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156111f3576111f36110db565b8160405282815287602084870101111561120c57600080fd5b61121d836020830160208801610cfd565b97965050505050505056fea2646970667358221220017d145a94bdd0f11c3d28e9b8d19bc569e8509af43bff31bbd6a5df5b2e5f5664736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "MCV1_Wrapper",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MCV1_Wrapper$Type["abi"]>>;
  export function deployContract(
    contractName: "test/hardhat/contracts/MCV1_Wrapper.sol:MCV1_Wrapper",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MCV1_Wrapper$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "MCV1_Wrapper",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MCV1_Wrapper$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "test/hardhat/contracts/MCV1_Wrapper.sol:MCV1_Wrapper",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MCV1_Wrapper$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "MCV1_Wrapper",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MCV1_Wrapper$Type["abi"]>>;
  export function getContractAt(
    contractName: "test/hardhat/contracts/MCV1_Wrapper.sol:MCV1_Wrapper",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MCV1_Wrapper$Type["abi"]>>;
}
